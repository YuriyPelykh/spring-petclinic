pipeline {
    agent any
    stages {
        stage('Clone repo from main') {
            steps {
                git branch: 'main',
                    credentialsId: 'GitHub_SSH_Key_jenkins',
                    url: 'git@github.com:YuriyPelykh/spring-petclinic.git'
                sh "ls -lat"
            }
        }
        stage('Static code analysis') {
            steps {
                echo "Stage in development..."
            }
        }

        stage('Pre-build Testing-DB creation') {
            steps {
                sh "docker-compose up -d mysql"
                script {
                    DB_CONTAINER_NAME = sh (
                    script: "echo \"${JOB_NAME}\"_mysql_1 | tr '[:upper:]' '[:lower:]' | tr -d ' '",
                    returnStdout: true
                    ).trim()

                    echo "Name of DB container: ${DB_CONTAINER_NAME}"

                    DB_IP = sh (
                    script: "docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${DB_CONTAINER_NAME}",
                    returnStdout: true
                    ).trim()
                }
                echo "IP-address of DB container: ${DB_IP}"
            }
        }

        stage('Build Docker image') {
            steps {
                sh "docker volume create --name maven-repo; \
                    docker build --tag spring_petclinic:${BUILD_NUMBER} \
                                 --tag spring_petclinic:latest \
                                 --build-arg TOMCAT_PORT=8000 \
                                 --add-host=mysql:${DB_IP} ."
            }
        }

        stage('Push image to repository') {
            steps {
                echo "Stage in development..."
            }
        }
    }

    post {
        always {
            sh "docker-compose down --volumes"
        }
    }
}

