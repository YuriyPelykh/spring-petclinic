pipeline {
    agent any
    stages {
        stage('Clone repo from main') {
            steps {
                git branch: 'main',
                    credentialsId: 'GitHub_SSH_Key_jenkins',
                    url: 'git@github.com:YuriyPelykh/spring-petclinic.git'
                sh "ls -lat"
            }
        }
        stage('Static code analysis') {
            steps {
                echo "Stage in development..."
            }
        }

        stage('Pre-build Testing-DB creation') {
            steps {
                script {
                    DB_CONTAINER_NAME = sh (
                    script: "docker-compose up -d mysql | grep 'done' | cut -d' ' -f2",
                    returnStdout: true
                    ).trim()

                    echo "Name of DB container: ${DB_CONTAINER_NAME}"

                    DB_IP = sh (
                    script: 'docker inspect -f "{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}" ${DB_CONTAINER_NAME}',
                    returnStdout: true
                    ).trim()
                }

                echo "IP-address of DB container: ${DB_IP}"
            }
        }

        stage('Build Docker image') {
            steps {
                sh "docker build --build-arg TOMCAT_PORT=8000 --add-host=mysql:${DB_IP} ."
            }
        }

        stage('Post-build DB destroy') {
            steps {
                sh "docker-compose down --volumes"
            }
        }

        stage('Push image to repository') {
            steps {
                echo "Stage in development..."
            }
        }
    }

    post {
        always {
            sh "docker-compose down --volumes"
        }
    }
}

